version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bookshop_db
    environment:
      POSTGRES_DB: bookshop_db
      POSTGRES_USER: bookshop_user
      POSTGRES_PASSWORD: bookshop_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bookshop_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookshop_user -d bookshop_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    container_name: bookshop_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://bookshop_user:bookshop_password@postgres:5432/bookshop_db
      JWT_SECRET: your-super-secure-jwt-secret-change-this-in-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      MAX_FILE_SIZE: 10485760
      UPLOAD_PATH: ./uploads
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookshop_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build: ./frontend
    container_name: bookshop_frontend
    environment:
      VITE_API_URL: http://localhost:5000
      VITE_APP_NAME: Bookshop Management System
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - bookshop_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: bookshop_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - bookshop_network

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  bookshop_network:
    driver: bridge

